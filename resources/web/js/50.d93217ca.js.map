{"version":3,"file":"js/50.d93217ca.js","mappings":"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","sources":["webpack://leetx-web/./src/components/charts/axisConfig.js","webpack://leetx-web/./src/components/charts/chartTheme.js","webpack://leetx-web/./src/components/charts/chart.js","webpack://leetx-web/./src/components/charts/chart2Y.js"],"sourcesContent":["import { NumericAxis } from \"scichart/Charting/Visuals/Axis/NumericAxis\";\r\nimport { FastLineRenderableSeries } from \"scichart/Charting/Visuals/RenderableSeries/FastLineRenderableSeries\";\r\nimport { RolloverModifier } from \"scichart/Charting/ChartModifiers/RolloverModifier\";\r\nimport { EAutoRange } from \"scichart/types/AutoRange\";\r\nimport { NumberRange } from \"scichart/Core/NumberRange\";\r\nimport { ENumericFormat } from \"scichart/types/NumericFormat\";\r\nimport { EAxisAlignment } from \"scichart/types/AxisAlignment\";\r\nimport { CursorModifier } from \"scichart/Charting/ChartModifiers/CursorModifier\";\r\n// import { Point } from \"scichart/Core/Point\";\r\n// import { GlowEffect } from \"scichart/Charting/Visuals/RenderableSeries/GlowEffect\";\r\nimport { MouseWheelZoomModifier } from \"scichart/Charting/ChartModifiers/MouseWheelZoomModifier\";\r\n// import { YAxisDragModifier } from \"scichart/Charting/ChartModifiers/YAxisDragModifier\";\r\n// import { XAxisDragModifier } from \"scichart/Charting/ChartModifiers/XAxisDragModifier\";\r\n// import { ZoomPanModifier } from \"scichart/Charting/ChartModifiers/ZoomPanModifier\";\r\n// import { EExecuteOn } from \"scichart/types/ExecuteOn\";\r\n// import { RubberBandXyZoomModifier } from \"scichart/Charting/ChartModifiers/RubberBandXyZoomModifier\";\r\nimport { PinchZoomModifier } from \"scichart/Charting/ChartModifiers/PinchZoomModifier\";\r\nimport { ZoomExtentsModifier } from \"scichart/Charting/ChartModifiers/ZoomExtentsModifier\";\r\nimport { SciChartSurface } from \"scichart/Charting/Visuals/SciChartSurface\";\r\nimport { ZoomPanModifier } from \"scichart/Charting/ChartModifiers/ZoomPanModifier\";\r\n// import { ELabelAlignment } from \"scichart\";\r\n// import { ELabelAlignment } from \"scichart/types/LabelAlignment\";\r\nimport { Thickness } from \"scichart/Core/Thickness\";\r\nexport function reg_sci() {\r\n    SciChartSurface.setRuntimeLicenseKey(\"rzs2xxgUuXZdgh/8O40xYjQ6Oum+T9sLUJjlK+e9kp8me670MJGyRw260rL1mY0RTqj2mYqDi3441Ujku/LBz/R382viXSg/21xJMhD5E3fq20s70tPxHWnL6pWEIF0oxJbtKKHtwYmm3ndZkV8mGcT4DMIpgsVxiZ9imYC/CRDGiWtjlpxgV2Vz1+3m4UUq0slH6xa0qquXrc2jN0KV4bNf9wXwjruI7++SmpDm5HOqV5hKVAsCiVWwC0JOjs88G9QOBSuT/x4/JJWjgg2Gz+Do+4x+uHvDPdnOfOiJFBZoHGrPU3sDRRyjV/6kM+liLLSzpiiEuGPsU9sTvqjn50BnQ6hbbG7HQCEGeNZJy057kpm46YUZgm3NDjv3hIulHk6K4/mxGDnd3BOFOrsmKntqNvdiq2dZLlPf17QpHiyBpFclfJmEvHND1FFKaUFBJzhhae1dUcL8w2Fts9B0JR+czamoQcJc4JlMo2j7Pw/TKWDbMzdROk/t3rTsndTxQQgETC7AMEGazLhNOkqVb5yCU1L0Kzvlx5n9Aj7CdBAfYyZDqTjaK/OahV60UUqoE+zpQCTZ5UY0XBeYCL04txeNT/462pY7JGDbzq8rj41cbhuBZsQzq/+pNnAKz5DbnrnWOE2up68Tk5ta+v+VovjDI8favStu18DnulxgJyySSkDFlxE/3CFIAthUvzY2+nnGubUXWqKeeHu62DWg6l8mzFDleJZmwYeXr7JtRRTWIGKyeUHJ0WrqQw==\");\r\n}\r\n// 初始化坐标轴\r\nexport function initAxis(wasmContext, id, title, axisStorke = \"#228B22\", axisAlignment = EAxisAlignment.Left, isy = true, lblcolor = \"#4d4b4b\") {\r\n    return new NumericAxis(wasmContext, {\r\n        // 坐标轴id\r\n        id: id,\r\n        // 坐标轴标题\r\n        axisTitle: title,\r\n        autoTicks: 5,\r\n        maxAutoTicks: 10,\r\n        minorsPerMajor: 5,\r\n        // 坐标轴摆放位置\r\n        axisAlignment: axisAlignment,\r\n        // 设置坐标轴可见范围\r\n        visibleRange: new NumberRange(0, 10),\r\n        autoRange: EAutoRange.Once,\r\n        isInnerAxis: false,\r\n        drawMajorBands: false,\r\n        axisBandsFill: \"red\",\r\n        axisTitleStyle: {\r\n            fontSize: isy == false ? 6 : 20,\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: 600,\r\n            color: axisStorke,\r\n            padding:new Thickness(0,20,0,0)\r\n            // alignment: ELabelAlignment.Right, //isy ==false ? ELabelAlignment.Left:ELabelAlignment.Right\r\n        },\r\n        axisBorder: {\r\n            borderTop: isy == false ? 1 : 0,\r\n            borderRight: isy ? 1 : 0,\r\n            color: axisStorke, // Green color\r\n        },\r\n        majorGridLineStyle: {\r\n            strokeThickness: 1,\r\n            color: '#D4D4D4',\r\n            strokeDashArray: [4, 2]\r\n        },\r\n        // 小网格线样式\r\n        // minorGridLineStyle: {\r\n        //     strokeThickness: 1,\r\n        //     color: axisStorke,\r\n        //     strokeDashArray: [2, 2]\r\n        // },\r\n        // 大刻度线样式\r\n        majorTickLineStyle: {\r\n            strokeThickness: 1,\r\n            color: axisStorke,\r\n            tickSize: 8,\r\n            strokeDashArray: [10, 2]\r\n        },\r\n        // 小刻度线样式\r\n        minorTickLineStyle: {\r\n            strokeThickness: 1,\r\n            color: axisStorke,\r\n            tickSize: 4,\r\n            strokeDashArray: [10, 2]\r\n        },\r\n        // 标签的样式\r\n        labelStyle: {\r\n            fontSize: 18,\r\n            fontWeight: 600,\r\n            color: lblcolor,\r\n            // fontFamily: \"Roboto\",\r\n        },\r\n        // effect: new GlowEffect(wasmContext, {\r\n        //     range: 0,\r\n        //     intensity: 1,\r\n        //     color: \"#333333\",\r\n        //     offset: new Point(10, 10),\r\n        // }),\r\n    });\r\n}\r\n\r\n// 设置直线系列\r\nexport function initLineSerie(wasmContext, xid, yid, storke = \"#228B22\", strokeThickness = 2) {\r\n    return new FastLineRenderableSeries(wasmContext, {\r\n        xAxisId: xid,\r\n        yAxisId: yid,\r\n        strokeThickness: strokeThickness,\r\n        stroke: storke,\r\n        // pointMarker: new EllipsePointMarker(wasmContext, {  --显示点\r\n        //     width: 6,\r\n        //     height: 6,\r\n        //     strokeThickness: 2,\r\n        //     stroke: \"SteelBlue\",\r\n        //     fill: \"LightSteelBlue\",\r\n        // }),\r\n    });\r\n}\r\n\r\n// 设置坐标轴数据精度\r\nexport function initNumericLabelPara(precision) {\r\n    return {\r\n        labelFormat: ENumericFormat.Decimal,\r\n        labelPrecision: precision,\r\n        useNativeText:true\r\n\r\n        // cursorLabelFormat: ENumericFormat.Decimal,\r\n        // cursorLabelPrecision: precision,\r\n        // asyncLabels: true,\r\n        // useSharedCache:false,\r\n        // useNativeText:true\r\n    };\r\n}\r\n// 添加十字光标修饰符\r\nexport function initCursorModifier(xid, yid, storke = \"#3662EC\", fillStorke = \"#b36200\") {\r\n    return new CursorModifier({\r\n        // 修饰符内部的注释要使用的xAxisId\r\n        xAxisId: xid,\r\n        // 修饰符内部的注释要使用的yAxisId\r\n        yAxisId: yid,\r\n        isEnabled: false,\r\n        // 十字光标颜色\r\n        crosshairStroke: storke,\r\n        // 十字光标粗细\r\n        crosshairStrokeThickness: 1,\r\n\r\n        // 十字光标端点处的背景颜色\r\n        axisLabelsFill: fillStorke,\r\n        // 十字光标端点处的文字的颜色\r\n        axisLabelsStroke: \"#fff\",\r\n        // tooltipContainerBackground: \"#000\",\r\n        // tooltipTextStroke: \"#ff6600\",\r\n        // showTooltip: true,\r\n        // strokeDashArray: [10, 2],\r\n    });\r\n}\r\n\r\nexport function initRolloverModifier(wasmContext, fillStorke = \"#b36200\") {\r\n    let tooltipModifier = new RolloverModifier(wasmContext)\r\n    tooltipModifier.axisLabelsFill = fillStorke;\r\n    return tooltipModifier\r\n}\r\n\r\nexport function addChartModifiers(chartModifiers) {\r\n    chartModifiers.add(new MouseWheelZoomModifier());\r\n    chartModifiers.add(new ZoomExtentsModifier());\r\n    chartModifiers.add(new ZoomPanModifier());\r\n    chartModifiers.add(new PinchZoomModifier());\r\n    // chartModifiers.add(rubberBandZoomModifier);\r\n    // chartModifiers.add(yAxisDragModifier);\r\n    // chartModifiers.add(xAxisDragModifier);\r\n}","\r\nimport { SciChartJSDarkv2Theme } from \"scichart/Charting/Themes/SciChartJSDarkv2Theme\";\r\n\r\n// export const chartTheme = {\r\n//     // 轴边界\r\n//     axisBorder: \"Transparent\",\r\n//     // 轴标题颜色\r\n//     axisTitleColor: \"red\",\r\n//     // 注解握把背景笔刷\r\n//     annotationsGripsBackroundBrush: \"white\",\r\n//     // 边框笔刷\r\n//     annotationsGripsBorderBrush: \"white\",\r\n//     // 轴3D带填充\r\n//     axis3DBandsFill: \"#1F3D6833\",\r\n//     // 轴带填充\r\n//     axisBandsFill: \"Transparent\",\r\n//     // 轴平面背景填充\r\n//     axisPlaneBackgroundFill: \"Transparent\",\r\n//     // 列填充刷\r\n//     columnFillBrush: \"white\",\r\n//     //列线的颜色 \r\n//     columnLineColor: \"white\",\r\n//     // cursor Line Brush\r\n//     // cursorLineBrush: \"#6495ED99\",\r\n//     cursorLineBrush: \"#6495ED99\",\r\n//     //默认颜色地图刷 \r\n//     defaultColorMapBrush: [\r\n//         { offset: 0, color: \"DarkBlue\" },\r\n//         { offset: 0.5, color: \"CornflowerBlue\" },\r\n//         { offset: 1, color: \"#FF22AA\" }\r\n//     ],\r\n//     // 羽绒带系列填充色\r\n//     downBandSeriesFillColor: \"#52CC54\",\r\n//     // 羽绒带系列线颜色\r\n//     downBandSeriesLineColor: \"#E26565\",\r\n//     // 降低身体刷\r\n//     downBodyBrush: \"white\",\r\n//     // 下芯的颜色\r\n//     downWickColor: \"white\",\r\n//     // 网格背景刷\r\n//     gridBackgroundBrush: \"white\",\r\n//     // 网格边界刷\r\n//     gridBorderBrush: \"white\",\r\n//     // 标签背景刷\r\n//     labelBackgroundBrush: \"white\",\r\n//     // 标签边境刷\r\n//     labelBorderBrush: \"Transparent\",\r\n//     // 标签前台刷\r\n//     labelForegroundBrush: \"#EEEEEE\",\r\n//     // 传说背景刷\r\n//     legendBackgroundBrush: \"white\",\r\n//     // 线条系列色彩\r\n//     lineSeriesColor: \"white\",\r\n//     // loadingAnimationBackground: \"white\",\r\n//     // loadingAnimationForeground: \"white\",\r\n//     // 主网格线刷\r\n//     majorGridLineBrush: \"#dddddd\",\r\n//     // 小网格线刷\r\n//     minorGridLineBrush: \"Transparent\",\r\n//     // 山区刷\r\n//     mountainAreaBrush: \"white\",\r\n//     // 山线颜色\r\n//     mountainLineColor: \"white\",\r\n//     // 概述填补刷\r\n//     overviewFillBrush: \"white\",\r\n//     // 平面上的边框颜色\r\n//     planeBorderColor: \"white\",\r\n//     // 翻转线刷\r\n//     rolloverLineBrush: \"#FD9F25\",\r\n//     // 橡皮筋填充刷\r\n//     rubberBandFillBrush: \"#999933\",\r\n//     // 皮筋笔刷\r\n//     rubberBandStrokeBrush: \"#999977\",\r\n//     // sciChart背景\r\n//     sciChartBackground: \"Transparent\",\r\n//     // 滚动条背景刷\r\n//     scrollbarBackgroundBrush: \"white\",\r\n//     // 滚动条边境刷\r\n//     scrollbarBorderBrush: \"white\",\r\n//     // 滚动条抓拍背景刷\r\n//     scrollbarGripsBackgroundBrush: \"white\",\r\n//     // 滚动条视口背景刷\r\n//     scrollbarViewportBackgroundBrush: \"white\",\r\n//     // 滚动条视口边框刷\r\n//     scrollbarViewportBorderBrush: \"white\",\r\n//     // 阴影效果的颜色\r\n//     shadowEffectColor: \"white\",\r\n//     // 文字注释背景\r\n//     textAnnotationBackground: \"#6495EDAA\",\r\n//     // 前景文本注释\r\n//     textAnnotationForeground: \"#EEEEEE\",\r\n//     // 蜱虫文本刷\r\n//     tickTextBrush: \"#6495ED\",\r\n//     // upBand系列填充颜色\r\n//     upBandSeriesFillColor: \"white\",\r\n//     // upBand系列线条颜色\r\n//     upBandSeriesLineColor: \"white\",\r\n//     // upBody刷\r\n//     upBodyBrush: \"#6495EDA0\",\r\n//     // 芯颜色\r\n//     upWickColor: \"#6495ED\"\r\n// }\r\nexport const theme = { ...new SciChartJSDarkv2Theme() };\r\n// 图表加载中的圆圈颜色\r\ntheme.loadingAnimationForeground = \"white\";\r\n// 图表加载中的背景颜色\r\ntheme.loadingAnimationBackground = \"white\";\r\ntheme.sciChartBackground = \"white\";\r\nexport default { theme }","import { SciChartSurface } from \"scichart/Charting/Visuals/SciChartSurface\";\r\nimport { XyDataSeries } from \"scichart/Charting/Model/XyDataSeries\";\r\nimport { NumericLabelProvider } from \"scichart/Charting/Visuals/Axis/LabelProvider/NumericLabelProvider\";\r\nimport { EAxisAlignment } from \"scichart/types/AxisAlignment\";\r\nimport { NumberRange } from \"scichart/Core/NumberRange\"\r\n// import { LegendModifier } from \"scichart/Charting/ChartModifiers/LegendModifier\";\r\nimport { theme } from \"./chartTheme\";\r\n\r\n// ECoordinateMode\r\nimport {\r\n    initAxis, initLineSerie,\r\n    // initCursorModifier,\r\n    initNumericLabelPara,\r\n    addChartModifiers,\r\n    reg_sci,\r\n} from \"./axisConfig\";\r\n// import { ECoordinateMode } from \"scichart/Charting/Visuals/Annotations/AnnotationBase\";\r\n// import { TextAnnotation } from \"scichart/Charting/Visuals/Annotations/TextAnnotation\";\r\n// import { EHorizontalAnchorPoint, EVerticalAnchorPoint } from \"scichart/types/AnchorPoint\";\r\nimport { LineAnnotation } from \"scichart/Charting/Visuals/Annotations/LineAnnotation\";\r\nimport { BoxAnnotation } from \"scichart/Charting/Visuals/Annotations/BoxAnnotation\";\r\nimport { HorizontalLineAnnotation } from \"scichart/Charting/Visuals/Annotations/HorizontalLineAnnotation\";\r\nimport { VerticalLineAnnotation } from \"scichart/Charting/Visuals/Annotations/VerticalLineAnnotation\";\r\nimport { CustomAnnotation } from \"scichart/Charting/Visuals/Annotations/CustomAnnotation\";\r\nimport { EHorizontalAnchorPoint, EVerticalAnchorPoint } from \"scichart/types/AnchorPoint\";\r\nimport { ELabelPlacement } from \"scichart/types/LabelPlacement\";\r\nimport { ECoordinateMode } from \"scichart/Charting/Visuals/Annotations/AnnotationBase\";\r\nclass RectEO {\r\n    constructor(xmin, xmax, ymin, ymax) {\r\n        this.xmin = xmin;\r\n        this.xmax = xmax;\r\n        this.ymin = ymin;\r\n        this.ymax = ymax;\r\n        this.active = false;\r\n        this.isOK = false;\r\n        this.stroke = \"transparent\";\r\n        this.strokeOK = \"green\";\r\n        this.strokeNOK = \"red\";\r\n    }\r\n}\r\n\r\nexport class XYChart {\r\n    constructor(xname, yname) {\r\n        this.xname = xname;\r\n        this.yname = yname;\r\n        this.eo = new RectEO(0, 5, 0, 5);\r\n\r\n        this.stepSvg1 = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"40\" height=\"50\" viewBox=\"0 0 40 50\"><defs><clipPath id=\"master_svg0_10_37\"><rect x=\"0\" y=\"0\" width=\"40\" height=\"50\" rx=\"0\"/></clipPath></defs><g clip-path=\"url(#master_svg0_10_37)\"><g><g transform=\"matrix(-1,0,0,1,79.99981689453125,0)\"><g><g><g><path d=\"M79.99990844726562,20.7103C79.99990844726562,26.2031,77.89270844726562,31.471,74.14190844726562,35.355L59.999908447265625,49.9996L45.857828447265625,35.3552C42.10714844726562,31.471,39.999908447265625,26.2031,39.999908447265625,20.7103C39.999908447265625,9.27231,48.95420844726563,0,59.999908447265625,0C71.04550844726563,0,79.99990844726562,9.27231,79.99990844726562,20.7103Z\" fill-rule=\"evenodd\" fill=\"#717D8B\" fill-opacity=\"0.5\"/></g></g></g></g></g><g>' +\r\n            '<text x=\"9\" y=\"28\" font-size=\"17\" fill=\"white\">S'\r\n        this.stepSvg2 = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\"><g><g><ellipse cx=\"6\" cy=\"6\" rx=\"6\" ry=\"6\" fill=\"#FFFFFF\" fill-opacity=\"1\"/><ellipse cx=\"6\" cy=\"6\" rx=\"5.5\" ry=\"5.5\" fill-opacity=\"0\" stroke-opacity=\"0.5\" stroke=\"#717D8B\" fill=\"none\" stroke-width=\"1\"/></g></g></svg>'\r\n\r\n    }\r\n\r\n    async createChart(elementId) {\r\n        reg_sci();\r\n        // 获取上下文和画布\r\n        this.chart = await SciChartSurface.createSingle(elementId, { theme });\r\n        let xid = \"axis_x\";\r\n        let yid = \"axis_y\";\r\n        this.stepsAnnotation = []\r\n        // 在上下文,设置x轴名称及位置,\r\n        this.xAxis = initAxis(this.chart.wasmContext, xid, \"  \", \"#3B3B3B\", EAxisAlignment.Bottom, false);\r\n        // this.xAxis = initAxis(wasmContext, xid, this.xname, \"#3B3B3B\", EAxisAlignment.Bottom, false);\r\n        // 可以控制单个表的x,y轴中标间隔文本颜色\r\n        this.yAxis = initAxis(this.chart.wasmContext, yid, this.yname, \"#3B3B3B\");\r\n        // 向画布上添加x轴\r\n        this.chart.sciChartSurface.xAxes.add(this.xAxis);\r\n        // 向画布上添加y轴\r\n        this.chart.sciChartSurface.yAxes.add(this.yAxis);\r\n        // 设置x轴的数据精度\r\n        this.xAxis.labelProvider = new NumericLabelProvider(initNumericLabelPara(2));\r\n        this.yAxis.labelProvider = new NumericLabelProvider(initNumericLabelPara(2));\r\n        this.xAxis.labelProvider.useCache = false;\r\n        this.yAxis.labelProvider.useCache = false;\r\n        // 在上下文里面添加数据系列(该数据系列可以作为其他线型的数据)\r\n        this.dataSeries = new XyDataSeries(this.chart.wasmContext, {\r\n            containsNaN: false,\r\n            isSorted: false,\r\n        });\r\n        // 创建直线系列\r\n        this.lineSerie = initLineSerie(\r\n            this.chart.wasmContext,\r\n            xid,\r\n            yid,\r\n            \"#3B3B3B\"\r\n        );\r\n        // 给直线绑定数据\r\n        // 画布渲染直线\r\n        this.chart.sciChartSurface.renderableSeries.add(this.lineSerie);\r\n        this.lineSerie.dataSeries = this.dataSeries;\r\n        //添加 鼠标缩放\r\n        addChartModifiers(this.chart.sciChartSurface.chartModifiers);\r\n\r\n        this.auto_fit = true\r\n        if (this.hasEO) {\r\n            this.addRectEO()\r\n            this.xRange = new NumberRange(this.eo.xmin, this.eo.xmax);\r\n            this.yRange = new NumberRange(this.eo.ymin, this.eo.ymax);\r\n        }\r\n        else {\r\n            this.xRange = new NumberRange(0, 5);\r\n            this.yRange = new NumberRange(0, 5);\r\n        }\r\n        this.is_init = true;\r\n    }\r\n    setRectEO(Angle, Force) {\r\n        if (Angle == 0) {\r\n            this.boxHorizontalLine.stroke = \"transparent\";\r\n            this.boxVerticalLine.stroke = \"transparent\";\r\n            this.boxHorizontalLine.axisLabelFill = \"transparent\";\r\n            this.boxVerticalLine.axisLabelFill = \"transparent\";\r\n        } else {\r\n            this.boxHorizontalLine.stroke = \"green\";\r\n            this.boxVerticalLine.stroke = \"green\";\r\n            this.boxHorizontalLine.axisLabelFill = \"red\";\r\n            this.boxVerticalLine.axisLabelFill = \"red\";\r\n            this.boxHorizontalLine.y1 = Force;\r\n            this.boxVerticalLine.x1 = Angle;\r\n        }\r\n    }\r\n\r\n    addRectEO() {\r\n        if (this.is_init == false)\r\n            return;\r\n        if (!this.boxAnnotation && this.chart.sciChartSurface.annotations.contains(this.boxAnnotation) == false) {\r\n            this.boxAnnotation = new BoxAnnotation({\r\n                xAxisId: \"axis_x\",\r\n                yAxisId: \"axis_y\",\r\n                fill: \"transparent\",\r\n                stroke: \"transparent\",\r\n                strokeThickness: 3,\r\n                x1: this.eo.xmin,\r\n                x2: this.eo.xmax,\r\n                y1: this.eo.ymin,\r\n                y2: this.eo.ymax\r\n            });\r\n\r\n            this.boxHorizontalLine = new HorizontalLineAnnotation({\r\n                xAxisId: \"axis_x\",\r\n                yAxisId: \"axis_y\",\r\n                y1: 0,\r\n                showLabel: true,\r\n                stroke: \"transparent\",\r\n                strokeThickness: 2,\r\n                axisLabelFill: \"transparent\",\r\n                axisFontSize: 23,\r\n                labelPlacement: ELabelPlacement.Top,\r\n            });\r\n\r\n            this.boxVerticalLine = new VerticalLineAnnotation({\r\n                xAxisId: \"axis_x\",\r\n                yAxisId: \"axis_y\",\r\n                x1: 0,\r\n                // y1: 10.3,\r\n                labelPlacement: ELabelPlacement.TopRight,\r\n                showLabel: true,\r\n                stroke: \"transparent\",\r\n                strokeThickness: 2,\r\n                axisLabelFill: \"transparent\",\r\n                axisFontSize: 23,\r\n\r\n            });\r\n\r\n\r\n            this.chart.sciChartSurface.annotations.add(\r\n                this.boxAnnotation, this.boxHorizontalLine, this.boxVerticalLine\r\n            )\r\n            this.eo.active = true;\r\n        }\r\n    }\r\n\r\n    addStepsRectEO(steps) {\r\n        this.stepsSvgAnnotation1 = [];\r\n        this.stepsSvgAnnotation2 = [];\r\n        this.stepsSvgAnnotation3 = [];\r\n        this.stepsPositons = [];\r\n\r\n        this.xStepInterval = (this.xRange.max - this.xRange.min) / 20\r\n        this.yStepInterval = (this.yRange.max - this.yRange.min) / 10\r\n        if (steps.length === 0) return;\r\n        for (var j = 0; j < steps.length; j++) {\r\n            let p = 0\r\n            if (steps[j - 1] && (steps[j].angle - steps[j - 1].angle) < this.xStepInterval) {\r\n                p = this.stepsPositons[j - 1] + 1\r\n            }\r\n            this.stepsPositons.push(p)\r\n        }\r\n        for (var i = 0; i < steps.length; i++) {\r\n            let h = Math.floor(this.stepsPositons[i] / 3) + 1\r\n            let w = this.stepsPositons[i] % 3 == 0 ? 0 : this.stepsPositons[i] % 3 == 1 ? -1 : 1\r\n            let anno1 = new CustomAnnotation({\r\n                xAxisId: \"axis_x\",\r\n                yAxisId: \"axis_y\",\r\n                x1: steps[i].angle + w * this.xStepInterval,\r\n                y1: steps[i].torque + h * this.yStepInterval,\r\n                yCoordinateMode: ECoordinateMode.DataValue,\r\n                verticalAnchorPoint: EVerticalAnchorPoint.Bottom,\r\n                horizontalAnchorPoint: EHorizontalAnchorPoint.Center,\r\n                svgString: this.stepSvg1 + `${i + 1}</text></g></g></svg>`\r\n            });\r\n            let anno2 = new LineAnnotation({\r\n                stroke: \"#717D8B\", strokeThickness: 2,\r\n                xCoordinateMode: ECoordinateMode.DataValue,\r\n                x1: steps[i].angle,\r\n                x2: steps[i].angle + w * this.xStepInterval,\r\n                yCoordinateMode: ECoordinateMode.DataValue,\r\n                y1: steps[i].torque,\r\n                y2: steps[i].torque + h * this.yStepInterval,\r\n            });\r\n\r\n            this.stepsSvgAnnotation1.push(anno1)\r\n            this.stepsSvgAnnotation2.push(anno2)\r\n        }\r\n\r\n        this.stepsSvgAnnotation3 = steps.map((step) => {\r\n            let anno = new CustomAnnotation({\r\n                xAxisId: \"axis_x\",\r\n                yAxisId: \"axis_y\",\r\n                x1: step.angle,\r\n                y1: step.torque,\r\n                yCoordinateMode: ECoordinateMode.DataValue,\r\n                verticalAnchorPoint: EVerticalAnchorPoint.Center,\r\n                horizontalAnchorPoint: EHorizontalAnchorPoint.Center,\r\n                svgString: this.stepSvg2\r\n\r\n            });\r\n\r\n            return anno;\r\n        })\r\n        this.stepsAnnotation = this.stepsSvgAnnotation1.concat(this.stepsSvgAnnotation2, this.stepsSvgAnnotation3)\r\n        this.chart.sciChartSurface.annotations.add(\r\n            ...this.stepsAnnotation\r\n        )\r\n    }\r\n\r\n    clearStepsRectEO() {\r\n        if (this.stepsAnnotation.length === 0) return;\r\n        this.stepsAnnotation.forEach(element => {\r\n            this.chart.sciChartSurface.annotations.remove(\r\n                element\r\n            )\r\n        });\r\n    }\r\n\r\n    resetEO() {\r\n        if (this.boxAnnotation) {\r\n            // this.boxAnnotation.stroke = this.eo.stroke\r\n            this.boxAnnotation.x1 = this.eo.xmin;\r\n            this.boxAnnotation.y1 = this.eo.ymin;\r\n            this.boxAnnotation.x2 = this.eo.xmax;\r\n            this.boxAnnotation.y2 = this.eo.ymax;\r\n        }\r\n    }\r\n\r\n    setEoResult(rok, isOk) {\r\n        if (this.is_init && this.boxAnnotation) {\r\n            if (rok) {\r\n                this.boxAnnotation.stroke = isOk == true ? this.eo.strokeOK : this.eo.strokeNOK;\r\n            }\r\n            else\r\n                this.boxAnnotation.stroke = this.eo.stroke;\r\n            // console.log(\" this.boxAnnotation.stroke\", this.boxAnnotation.stroke);\r\n        }\r\n    }\r\n\r\n    // 给数据系列添加数据\r\n    addSeriesData(xValues, yValues) {\r\n        if (this.is_init)\r\n            this.dataSeries.appendRange(xValues, yValues);\r\n    }\r\n\r\n    // 清空数据系列里面的数据\r\n    clearSeriesData() {\r\n        if (this.is_init)\r\n            this.dataSeries.clear();\r\n    }\r\n    // 允许拖动轴进行缩放\r\n    fit() {\r\n        //没有曲线点时使用缩放会导致循环缩放并可能导致显示失真\r\n        if (this.dataSeries.count() < 1 || this.is_init == false)\r\n            return;\r\n        this.xRange = this.xAxis.getMaximumRange()\r\n        this.xRange.min = this.xRange.min - this.xRange.diff * 0.05;\r\n        this.xRange.max = this.xRange.max + this.xRange.diff * 0.05;\r\n        this.xAxis.visibleRange = this.xRange;\r\n        this.yRange = this.yAxis.getMaximumRange()\r\n        this.yRange.min = this.yRange.min - this.yRange.diff * 0.05;\r\n        this.yRange.max = this.yRange.max + this.yRange.diff * 0.05;\r\n        this.yAxis.visibleRange = this.yRange;\r\n    }\r\n    /**\r\n     ** 带EO的自适应模式\r\n     ** 未绘制曲线时,缩放到EO范围\r\n     */\r\n    fitWithEO() {\r\n        if (this.dataSeries.count() < 1 || this.is_init == false) {\r\n            return;\r\n        }\r\n        else {\r\n            this.xRange = this.xAxis.getMaximumRange()\r\n            if (this.eo.xmin < this.xRange.min)\r\n                this.xRange.min = this.eo.xmin\r\n            if (this.eo.xmax > this.xRange.max)\r\n                this.xRange.max = this.eo.xmax\r\n            this.xRange.min = this.xRange.min - this.xRange.diff * 0.05;\r\n            this.xRange.max = this.xRange.max + this.xRange.diff * 0.05;\r\n            this.xAxis.visibleRange = this.xRange;\r\n            this.yRange = this.yAxis.getMaximumRange();\r\n            if (this.eo.ymin < this.yRange.min)\r\n                this.yRange.min = this.eo.ymin;\r\n            if (this.eo.ymax > this.yRange.max)\r\n                this.yRange.max = this.eo.ymax;\r\n            this.yRange.min = this.yRange.min - this.yRange.diff * 0.05;\r\n            this.yRange.max = this.yRange.max + this.yRange.diff * 0.05;\r\n            this.yAxis.visibleRange = this.yRange;\r\n        }\r\n        // console.log(this.xRange, this.yRange);\r\n    }\r\n    /**\r\n     ** 带EO的自适应模式,带扭矩的最值范围\r\n     ** 未绘制曲线时,缩放到EO范围\r\n     */\r\n    fitWithEORange(min, max) {\r\n        if (this.dataSeries.count() < 1 || this.is_init == false) {\r\n            return;\r\n        }\r\n        else {\r\n            this.xRange = this.xAxis.getMaximumRange()\r\n            if (this.eo.xmin < this.xRange.min)\r\n                this.xRange.min = this.eo.xmin\r\n            if (this.eo.xmax > this.xRange.max)\r\n                this.xRange.max = this.eo.xmax\r\n            this.xRange.min = this.xRange.min - this.xRange.diff * 0.05;\r\n            this.xRange.max = this.xRange.max + this.xRange.diff * 0.05;\r\n            this.xAxis.visibleRange = this.xRange;\r\n            this.yRange = this.yAxis.getMaximumRange();\r\n            if (min > this.eo.ymin)\r\n                min = this.eo.ymin\r\n            if (max < this.eo.ymax)\r\n                max = this.eo.ymax;\r\n            if (min < this.yRange.min)\r\n                this.yRange.min = min;\r\n            if (max > this.yRange.max)\r\n                this.yRange.max = max;\r\n            this.yRange.min = this.yRange.min - this.yRange.diff * 0.05;\r\n            this.yRange.max = this.yRange.max + this.yRange.diff * 0.05;\r\n            this.yAxis.visibleRange = this.yRange;\r\n        }\r\n        // console.log(this.xRange, this.yRange);\r\n    }\r\n\r\n    setEoRange(xmin, xmax, ymin, ymax) {\r\n        // if (xmin && xmax && ymin && ymax)\r\n        this.eo.xmin = xmin;\r\n        this.eo.xmax = xmax;\r\n        this.eo.ymin = ymin;\r\n        this.eo.ymax = ymax;\r\n        this.resetEO()\r\n    }\r\n\r\n    // 设置数据范围\r\n    setXRange(min, max) {\r\n        this.xRange.min = min\r\n        this.xRange.max = max\r\n        this.xAxis.visibleRange = this.xRange;\r\n    }\r\n\r\n    setYRange(min, max) {\r\n        this.yRange.min = min\r\n        this.yRange.max = max\r\n        this.yAxis.visibleRange = this.yRange;\r\n    }\r\n\r\n    //设置\r\n    showCursor(show) {\r\n        if (show) {\r\n            //    cursorModifier.yAxisId = yid;\r\n        }\r\n        //cursorModifier.isEnabled = show;\r\n    }\r\n    // 设置精度\r\n    setXPrecision(precision) {\r\n        this.xAxis.labelProvider = new NumericLabelProvider(initNumericLabelPara(precision));\r\n    }\r\n    setYPrecision(precision) {\r\n        this.yAxis.labelProvider = new NumericLabelProvider(initNumericLabelPara(precision));\r\n    }\r\n    destory() {\r\n        if (this.dataSeries)\r\n            this.dataSeries.delete();\r\n        if (this.chart) {\r\n            this.chart.sciChartSurface.delete();\r\n            delete this.chart;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const CHART_XY = new XYChart(\"angle\", \"torque\");\r\nexport const CHART_TSPD = new XYChart(\"time\", \"speed\");\r\n// export const CHART_HIS_XY = new XYChart(\"angle\", \"torque\");\r\n// export const CHART_HIS_TSPD = new XYChart(\"time\", \"speed\");\r\nwindow.addEventListener('beforeunload', () => {\r\n    try {\r\n        CHART_XY.destory();\r\n        CHART_TSPD.destory();\r\n        console.log('=================== .close =====================>');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n});\r\nexport default { CHART_XY, CHART_TSPD }\r\n\r\n// export async function createSingleChart(elementId) {\r\n//     // (\"*************************  Init Chart  ***********************\");\r\n//     // 设置图表主题\r\n//     let theme = { ...new SciChartJSDarkv2Theme() };\r\n//     // 图表加载中的圆圈颜色\r\n//     theme.loadingAnimationForeground = \"#eeeeee\";\r\n//     // 图表加载中的背景颜色\r\n//     theme.loadingAnimationBackground = \"#f8f8f8\";\r\n//     // 设置图表运行许可证\r\n//     reg_sci();\r\n//     // 获取上下文和画布\r\n//     let { sciChartSurface, wasmContext } = await SciChartSurface.create(elementId, { theme });\r\n//     // 设置图表的主题\r\n//     sciChartSurface.applyTheme(chartTheme);\r\n//     // Axises\r\n//     let xid = \"axis_x\";\r\n//     let yid = \"axis_y\";\r\n//     // 在上下文,设置x轴名称及位置,\r\n//     let xAxis = initAxis(wasmContext, xid, \"  \", \"#3B3B3B\", EAxisAlignment.Bottom, false);\r\n//     // let xAxis = initAxis(wasmContext, xid, \"angle\", \"transparent\", EAxisAlignment.Bottom, false);\r\n//     // xAxis.axisTitleStyle.alignment =\r\n//     // 可以控制单个表的x,y轴中标间隔文本颜色\r\n//     let yAxis = initAxis(wasmContext, yid, \"torque\", \"#3B3B3B\");\r\n\r\n//     // let yAxis = initAxis(wasmContext, yid, \"\", \"#3B3B3B\");\r\n//     // 向画布上添加x轴\r\n//     sciChartSurface.xAxes.add(xAxis);\r\n//     // 向画布上添加y轴\r\n//     sciChartSurface.yAxes.add(yAxis);\r\n//     // 设置x轴的数据精度\r\n//     xAxis.labelProvider = new NumericLabelProvider(initNumericLabelPara(1));\r\n//     yAxis.labelProvider = new NumericLabelProvider(initNumericLabelPara(2));\r\n//     // 在上下文里面添加数据系列(该数据系列可以作为其他线型的数据)\r\n//     let dataSeries = new XyDataSeries(wasmContext, {\r\n//         containsNaN: false,\r\n//     });\r\n//     // 创建直线系列\r\n//     let lineSerie = initLineSerie(\r\n//         wasmContext,\r\n//         xid,\r\n//         yid,\r\n//         \"#3B3B3B\"\r\n//     );\r\n//     // 给直线绑定数据\r\n//     lineSerie.dataSeries = dataSeries;\r\n//     // 画布渲染直线\r\n//     sciChartSurface.renderableSeries.add(lineSerie);\r\n//     //\r\n//     // let cursorModifier = initCursorModifier(xid, yid);\r\n//     // cursorModifier.isEnabled = false\r\n//     // 添加十字光标修饰符\r\n//     // sciChartSurface.chartModifiers.add(cursorModifier);\r\n//     // 文本注释\r\n//     // let textAnnotation = new TextAnnotation({\r\n//     //     x1: 0.1,\r\n//     //     y1: 0.2,\r\n//     //     xCoordinateMode: ECoordinateMode.DataValue,\r\n//     //     yCoordinateMode: ECoordinateMode.DataValue,\r\n//     //     horizontalAnchorPoint: EHorizontalAnchorPoint.Left,\r\n//     //     verticalAnchorPoint: EVerticalAnchorPoint.Center,\r\n//     //     textColor: \"#F1B24A\",\r\n//     //     fontSize: 26,\r\n//     //     fontFamily: \"Times New Roman\",\r\n//     //     text: \"测试中432423432的注释\",\r\n//     //     isEditable: true\r\n//     // });\r\n//     // sciChartSurface.annotations.add(textAnnotation)\r\n\r\n//     // sciChartSurface.chartModifiers.add(new LegendModifier({\r\n//     //     showCheckboxes:true,\r\n//     //     showSeriesMarkers:true,\r\n//     //     showLegend:true\r\n//     // }))\r\n\r\n//     addChartModifiers(sciChartSurface.chartModifiers);\r\n\r\n//     //handlers\r\n//     let axises = [xAxis, yAxis];\r\n//     // 给数据系列添加数据\r\n//     function addSeriesData(xValues, yValues) {\r\n//         // console.log(xValues, yValues);\r\n//         dataSeries.appendRange(xValues, yValues);\r\n//         // addSeriesDataHandler(xValues, yValues, dataSeries)\r\n//     }\r\n//     // 清空数据系列里面的数据\r\n//     function clearSeriesData() {\r\n//         dataSeries.clear();\r\n//         // clearSeriesDataHandler([dataSeries]);\r\n//     }\r\n//     // 允许拖动轴进行缩放\r\n//     function fit() {\r\n//         // sciChartSurface.zoomExtents();\r\n//         let xRange = xAxis.getMaximumRange()\r\n//         let xrng = xRange.max - xRange.min;\r\n//         let max = xRange.min - xrng * 0.05;\r\n//         let xmax = xRange.max + xrng * 0.05;\r\n//         let yRange = yAxis.getMaximumRange()\r\n//         let yrng = yRange.max - yRange.min;\r\n//         // yrng = yrng > 0.5 ? yrng :50;\r\n//         let ymin = yRange.min - yrng * 0.05;\r\n//         let ymax = yRange.max + yrng * 0.05;\r\n//         if (isNaN(xmax) == false && isNaN(xmin) == false)\r\n//             xAxis.visibleRange = new NumberRange(xmin, xmax);\r\n//         if (isNaN(ymin) == false && isNaN(ymax) == false)\r\n//             yAxis.visibleRange = new NumberRange(ymin, ymax);\r\n//     }\r\n//     // 设置标题\r\n//     function setTitle(axis, title) {\r\n//         setTitleHandler(axis, title, axises)\r\n//     }\r\n\r\n//     // 设置数据范围\r\n//     function setRange(axis, min, max) {\r\n//         setRangeHandler(axis, min, max, axises);\r\n//     }\r\n\r\n//     //设置\r\n//     function showCursor(show) {\r\n//         if (show) {\r\n//             //    cursorModifier.yAxisId = yid;\r\n//         }\r\n//         //cursorModifier.isEnabled = show;\r\n//     }\r\n//     // 设置精度\r\n//     function setPrecision(axis, precision, axises) {\r\n//         setPrecisionHandler(axis, precision, axises);\r\n//     }\r\n//     // 关闭图表\r\n//     function close() {\r\n//         dataSeries.delete()\r\n//         sciChartSurface.delete()\r\n//     }\r\n//     return new ChartHandler(close, addSeriesData, clearSeriesData, fit, setTitle, setRange, showCursor, setPrecision);\r\n// }\r\n","import { XyDataSeries } from \"scichart/Charting/Model/XyDataSeries\";\r\nimport { NumericLabelProvider } from \"scichart/Charting/Visuals/Axis/LabelProvider/NumericLabelProvider\";\r\nimport { LeftAlignedOuterVerticallyStackedAxisLayoutStrategy } from \"scichart/Charting/LayoutManager/LeftAlignedOuterVerticallyStackedAxisLayoutStrategy\";\r\nimport { NumberRange } from \"scichart/Core/NumberRange\";\r\nimport { initAxis, initLineSerie, initNumericLabelPara, } from \"./axisConfig\";\r\nimport { XYChart } from \"./chart\";\r\nimport { EAxisAlignment } from \"scichart/types/AxisAlignment\";\r\nimport { ECoordinateMode } from \"scichart/Charting/Visuals/Annotations/AnnotationBase\";\r\n// import { TextAnnotation } from \"scichart/Charting/Visuals/Annotations/TextAnnotation\";\r\nimport { EHorizontalAnchorPoint, EVerticalAnchorPoint } from \"scichart/types/AnchorPoint\";\r\nimport { LineAnnotation } from \"scichart/Charting/Visuals/Annotations/LineAnnotation\";\r\n// import { BoxAnnotation } from \"scichart/Charting/Visuals/Annotations/BoxAnnotation\";\r\n// import { HorizontalLineAnnotation } from \"scichart/Charting/Visuals/Annotations/HorizontalLineAnnotation\";\r\nimport { CustomAnnotation } from \"scichart/Charting/Visuals/Annotations/CustomAnnotation\";\r\n// import { VerticalLineAnnotation } from \"scichart/Charting/Visuals/Annotations/VerticalLineAnnotation\";\r\n// import { ELabelPlacement } from \"scichart/types/LabelPlacement\";\r\n// 双y轴图表\r\nexport class XYYChart extends XYChart {\r\n    constructor(xname, yname, y2name) {\r\n        super(xname, yname)\r\n        this.y2name = y2name;\r\n    }\r\n    async createChart(elementId = \"scichart\") {\r\n        await super.createChart(elementId);\r\n        let yid2 = \"axis_y2\";\r\n        this.yAxis2 = initAxis(this.chart.wasmContext, yid2, this.y2name, \"#00A248\", EAxisAlignment.Left, true, \"#00A248\");\r\n        this.yAxis2.labelProvider = new NumericLabelProvider(initNumericLabelPara(2));\r\n        this.yAxis2.labelProvider.useCache = false;\r\n        this.chart.sciChartSurface.yAxes.add(this.yAxis2);\r\n        this.chart.sciChartSurface.layoutManager.leftOuterAxesLayoutStrategy = new LeftAlignedOuterVerticallyStackedAxisLayoutStrategy();\r\n        this.xy2lineSerie = initLineSerie(this.chart.wasmContext, \"axis_x\", yid2, \"#00A248\");\r\n        this.chart.sciChartSurface.renderableSeries.add(this.xy2lineSerie);\r\n        this.xy2dataSeries = new XyDataSeries(this.chart.wasmContext, {\r\n            containsNaN: false,\r\n        });\r\n        this.xy2lineSerie.dataSeries = this.xy2dataSeries;\r\n        this.yRange2 = new NumberRange(0, 10);\r\n    }\r\n\r\n    setRectEO(arr) {\r\n        this.box1.stroke = \"green\";\r\n        this.box2.stroke = \"green\";\r\n\r\n        // this.box3.textColor = \"green\";\r\n        // this.box3.text = \"hello world!\";\r\n\r\n\r\n        this.box4.stroke = \"green\";\r\n        this.box5.stroke = \"green\";\r\n        // this.box6.stroke = \"green\";\r\n\r\n        this.box4.showLabel = true;\r\n        this.box5.showLabel = true;\r\n        // this.box6.showLabel = true;\r\n\r\n\r\n        this.box1.x1 = arr[0];\r\n        this.box1.y1 = arr[1];\r\n        this.box1.x2 = arr[2];\r\n        this.box1.y2 = arr[3];\r\n\r\n        this.box2.x1 = arr[0];\r\n        this.box2.y1 = arr[1];\r\n        this.box2.x2 = arr[2];\r\n        this.box2.y2 = arr[3];\r\n\r\n        // this.box3.x1=arr[0];\r\n        // this.box3.y1=arr[4];\r\n\r\n        this.box4.y1 = arr[1];\r\n        this.box5.y1 = arr[4];\r\n        // this.box6.x1=arr[0];\r\n        this.box7.x1 = arr[0];\r\n        this.box7.y1 = arr[1];\r\n    }\r\n    clearRectEO() {\r\n        if (this.boxAnnotation.length === 0) return;\r\n        this.boxAnnotation.forEach(element => {\r\n            this.chart.sciChartSurface.annotations.remove(\r\n                element\r\n            )\r\n        });\r\n        // this.box1.stroke = \"transparent\";\r\n        // this.box2.stroke = \"transparent\";\r\n\r\n        // // this.box3.x1=arr[0];\r\n        // // this.box3.y1=0;\r\n        // // this.box3.textColor = \"red\";\r\n        // // this.box3.text = \"找不到落座扭矩点,请调整参数\";\r\n        // this.box7.x1=arr[0];\r\n        // this.box7.x1=arr[0];\r\n\r\n\r\n        // this.box4.stroke = \"transparent\";\r\n        // this.box5.stroke = \"transparent\";\r\n        // // this.box6.stroke = \"transparent\";\r\n\r\n        // this.box4.showLabel = false;\r\n        // this.box5.showLabel = false;\r\n        // // this.box6.showLabel = false;\r\n    }\r\n\r\n    addRectEO(arr) {\r\n        if (this.is_init == false)\r\n            return;\r\n        this.boxAnnotation = []\r\n        // arr[0]=1400\r\n        // //正方形\r\n        // this.box1 = new BoxAnnotation({\r\n        //     xAxisId: \"axis_x\",\r\n        //     yAxisId: \"axis_y\",\r\n        //     fill: \"transparent\",\r\n        //     stroke: \"blue\",\r\n        //     strokeThickness: 3,\r\n        //     x1: arr[0],\r\n        //     y1: arr[1],\r\n        //     x2: arr[2],\r\n        //     y2: arr[3],\r\n        // });\r\n        // //斜线\r\n        // this.box2 = new LineAnnotation({\r\n        //     xAxisId: \"axis_x\",\r\n        //     yAxisId: \"axis_y\",\r\n        //     fill: \"transparent\",\r\n        //     stroke: \"blue\",\r\n        //     strokeThickness: 3,\r\n        //     x1: arr[0],\r\n        //     y1: arr[1],\r\n        //     x2: arr[2],\r\n        //     y2: arr[3],\r\n        // });\r\n        // // 提示信息\r\n        // // this.box3 = new TextAnnotation({\r\n        // //     xAxisId: \"axis_x\",\r\n        // //     yAxisId: \"axis_y\",\r\n        // //     // fill: \"transparent\",\r\n        // //     textColor: \"blue\",\r\n        // //     fontSize:22,\r\n        // //     // strokeThickness: 3,\r\n        // //     x1: arr[0],\r\n        // //     y1: arr[1],\r\n        // //     text:\"hello world!\"\r\n        // // });\r\n        // //底下的水平线\r\n        // this.box4 = new HorizontalLineAnnotation({\r\n        //     xAxisId: \"axis_x\",\r\n        //     yAxisId: \"axis_y\",\r\n        //     y1: arr[1],\r\n        //     showLabel: true,\r\n        //     stroke: \"Red\",\r\n        //     strokeThickness: 2,\r\n        //     axisLabelFill: \"Red\",\r\n        //     axisFontSize: 10,\r\n        //     labelPlacement: ELabelPlacement.TopLeft,\r\n        // });\r\n        // //上面的线\r\n        // this.box5 = new HorizontalLineAnnotation({\r\n        //     xAxisId: \"axis_x\",\r\n        //     yAxisId: \"axis_y2\",\r\n        //     y1: arr[3],\r\n        //     showLabel: true,\r\n        //     stroke: \"Red\",\r\n        //     strokeThickness: 2,\r\n        //     axisLabelFill: \"Red\",\r\n        //     axisFontSize: 10,\r\n        //     labelPlacement: ELabelPlacement.TopLeft,\r\n        // });\r\n        // //竖线\r\n        // // this.box6 = new VerticalLineAnnotation({\r\n        // //     xAxisId: \"axis_x\",\r\n        // //     yAxisId: \"axis_y2\",\r\n        // //     x1: arr[0],\r\n        // //     // y1: 10.3,\r\n        // //     labelPlacement: ELabelPlacement.TopLeft,\r\n        // //     showLabel: true,\r\n        // //     stroke: \"Red\",\r\n        // //     strokeThickness: 2,\r\n        // //     axisLabelFill: \"Red\",\r\n        // //     axisFontSize: 10,\r\n\r\n        // // });\r\n        // //svg圆环\r\n        // this.box7 = new CustomAnnotation({\r\n        //     xAxisId: \"axis_x\",\r\n        //     yAxisId: \"axis_y\",\r\n        //     x1: arr[0],\r\n        //     y1: arr[3],\r\n        //     verticalAnchorPoint: EVerticalAnchorPoint.Center,\r\n        //     horizontalAnchorPoint: EHorizontalAnchorPoint.Center,\r\n        //     svgString:\r\n        //         '<svg id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        //         '<g transform=\"translate(-50.867218,-10.091687)\">' +\r\n        //         '<circle cx=\"75\" cy=\"31\" r=\"20\" stroke=\"yellow\" stroke-width=\"2\" fill=\"none\" />' +\r\n        //         \"/>\" +\r\n        //         \"</g>\" +\r\n        //         \"</svg>\"\r\n\r\n        // });\r\n        // this.boxAnnotation.push(this.box2,this.box4,this.box5,this.box7)\r\n\r\n\r\n        this.boxTargetInfo = new CustomAnnotation({\r\n            xAxisId: \"axis_x\",\r\n            yAxisId: \"axis_y\",\r\n            x1: arr[4] - arr[7] / 20,\r\n            y1: arr[5],\r\n            xCoordinateMode: ECoordinateMode.DataValue,\r\n            yCoordinateMode: ECoordinateMode.DataValue,\r\n            verticalAnchorPoint: EVerticalAnchorPoint.Bottom,\r\n            horizontalAnchorPoint: EHorizontalAnchorPoint.Right,\r\n            svgString:\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"149\" height=\"80\" viewBox=\"0 0 149 80\"><g><path d=\"M0,80L149,80L120,0L0,0L0,80Z\" fill=\"#364150\" fill-opacity=\"0.699999988079071\"/><g>' +\r\n                '<text x=\"9\" y=\"28\" font-size=\"17\" fill=\"white\"> ' +\r\n                `<tspan>斜率：${arr[3]}</tspan>` +\r\n                `<tspan x=\"9\" dy=\"1.2em\">扭矩：${arr[5]}</tspan>` +\r\n                `<tspan x=\"9\"  dy=\"1.2em\">角度：${arr[4]}</tspan>` +\r\n                \"</text></g></g></svg>\"\r\n\r\n        });\r\n        this.boxTargetPoint = new CustomAnnotation({\r\n            xAxisId: \"axis_x\",\r\n            yAxisId: \"axis_y\",\r\n            x1: arr[4],\r\n            y1: arr[5],\r\n            verticalAnchorPoint: EVerticalAnchorPoint.Center,\r\n            horizontalAnchorPoint: EHorizontalAnchorPoint.Center,\r\n            svgString: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\"><g><g><ellipse cx=\"6\" cy=\"6\" rx=\"6\" ry=\"6\" fill=\"#FFFFFF\" fill-opacity=\"1\"/><ellipse cx=\"6\" cy=\"6\" rx=\"5.5\" ry=\"5.5\" fill-opacity=\"0\" stroke-opacity=\"0.5\" stroke=\"#717D8B\" fill=\"none\" stroke-width=\"1\"/></g></g></svg>'\r\n        });\r\n        this.boxTargetLine = new LineAnnotation({\r\n            xAxisId: \"axis_x\",\r\n            yAxisId: \"axis_y\",\r\n            stroke: \"#717D8B\",\r\n            strokeThickness: 2,\r\n            xCoordinateMode: ECoordinateMode.DataValue,\r\n            x1: arr[4],\r\n            x2: arr[4] - arr[7] / 20,\r\n            yCoordinateMode: ECoordinateMode.DataValue,\r\n            y1: arr[5],\r\n            y2: arr[5],\r\n        });\r\n\r\n        this.boxSlopeInfo = new CustomAnnotation({\r\n            xAxisId: \"axis_x\",\r\n            yAxisId: \"axis_y2\",\r\n            x1: arr[1] - arr[7] / 20,\r\n            y1: arr[0],\r\n            xCoordinateMode: ECoordinateMode.DataValue,\r\n            yCoordinateMode: ECoordinateMode.DataValue,\r\n            verticalAnchorPoint: EVerticalAnchorPoint.Top,\r\n            horizontalAnchorPoint: EHorizontalAnchorPoint.Right,\r\n            svgString:\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"149\" height=\"80\" viewBox=\"0 0 149 80\"><g transform=\"matrix(1,0,0,-1,0,160)\"><path d=\"M0,160L149,160L120,80L0,80L0,160Z\" fill=\"#364150\" fill-opacity=\"0.699999988079071\"/></g>' +\r\n                '<text x=\"9\" y=\"28\" font-size=\"17\" fill=\"white\"> ' +\r\n                `<tspan>角度：${arr[1]}</tspan>` +\r\n                `<tspan x=\"9\" dy=\"1.2em\">扭矩：${arr[2]}</tspan>` +\r\n                `<tspan x=\"9\"  dy=\"1.2em\">斜率：${arr[0]}</tspan>` +\r\n                \"</text></svg>\"\r\n\r\n        });\r\n        this.boxSlopePoint = new CustomAnnotation({\r\n            xAxisId: \"axis_x\",\r\n            yAxisId: \"axis_y2\",\r\n            x1: arr[1],\r\n            y1: arr[0],\r\n            verticalAnchorPoint: EVerticalAnchorPoint.Center,\r\n            horizontalAnchorPoint: EHorizontalAnchorPoint.Center,\r\n            svgString: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\"><g><g><ellipse cx=\"6\" cy=\"6\" rx=\"6\" ry=\"6\" fill=\"#FFFFFF\" fill-opacity=\"1\"/><ellipse cx=\"6\" cy=\"6\" rx=\"5.5\" ry=\"5.5\" fill-opacity=\"0\" stroke-opacity=\"0.5\" stroke=\"#717D8B\" fill=\"none\" stroke-width=\"1\"/></g></g></svg>'\r\n        });\r\n        this.boxSlopeLine = new LineAnnotation({\r\n            xAxisId: \"axis_x\",\r\n            yAxisId: \"axis_y2\",\r\n            stroke: \"#717D8B\", strokeThickness: 2,\r\n            xCoordinateMode: ECoordinateMode.DataValue,\r\n            x1: arr[1],\r\n            x2: arr[1] - arr[7] / 20,\r\n            yCoordinateMode: ECoordinateMode.DataValue,\r\n            y1: arr[0],\r\n            y2: arr[0],\r\n        });\r\n        if (arr[6]) {\r\n            this.boxAnnotation.push(this.boxSlopeInfo, this.boxSlopePoint, this.boxSlopeLine, this.boxTargetInfo, this.boxTargetPoint, this.boxTargetLine)\r\n        } else {\r\n            this.boxAnnotation.push(this.boxSlopeInfo, this.boxSlopePoint, this.boxSlopeLine)\r\n        }\r\n\r\n        this.chart.sciChartSurface.annotations.add(\r\n            ...this.boxAnnotation\r\n        )\r\n        this.eo.active = true;\r\n\r\n    }\r\n\r\n    addSeriesData(xValues, yValues, yValues2) {\r\n        super.addSeriesData(xValues, yValues)\r\n        this.xy2dataSeries.appendRange(xValues, yValues2);\r\n    }\r\n\r\n    clearSeriesData() {\r\n        if (this.is_init) {\r\n            super.clearSeriesData();\r\n            this.xy2dataSeries.clear();\r\n        }\r\n    }\r\n\r\n    fit() {\r\n        super.fit();\r\n        this.yRange2 = this.yAxis2.getMaximumRange()\r\n        this.yRange2.min = this.yRange2.min - this.yRange2.diff * 0.05;\r\n        this.yRange2.max = this.yRange2.max + this.yRange2.diff * 0.05;\r\n        this.yAxis2.visibleRange = this.yRange2;\r\n    }\r\n\r\n    fitWithEORange(min, max) {\r\n        super.fit();\r\n        this.yRange2 = this.yAxis2.getMaximumRange()\r\n        this.yRange2.min = this.yRange2.min < min ? this.yRange2.min : min;\r\n        this.yRange2.max = this.yRange2.max > max ? this.yRange2.max : max;\r\n        this.yRange2.min = this.yRange2.min - this.yRange2.diff * 0.05;\r\n        this.yRange2.max = this.yRange2.max + this.yRange2.diff * 0.05;\r\n        this.yAxis2.visibleRange = this.yRange2;\r\n    }\r\n\r\n    setYRange2(min, max) {\r\n        this.yRange2.min = min;\r\n        this.yRange2.max = max;\r\n        this.yAxis2.visibleRange = this.yRange2;\r\n    }\r\n\r\n    setY2Precision(precision) {\r\n        this.yAxis2.labelProvider = new NumericLabelProvider(initNumericLabelPara(precision));\r\n    }\r\n\r\n    destory() {\r\n        this.xy2dataSeries.delete();\r\n        this.xy2lineSerie.delete();\r\n        super.destory();\r\n    }\r\n}\r\n\r\nexport const CHART_TPT = new XYYChart(\"time\", \"angle\", \"torque\")\r\nwindow.addEventListener('beforeunload', () => {\r\n    try {\r\n        CHART_TPT.destory();\r\n        console.log('=================== .close =====================>');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n});"],"names":["reg_sci","SciChartSurface","initAxis","wasmContext","id","title","axisStorke","axisAlignment","EAxisAlignment","isy","lblcolor","NumericAxis","axisTitle","autoTicks","maxAutoTicks","minorsPerMajor","visibleRange","NumberRange","autoRange","EAutoRange","isInnerAxis","drawMajorBands","axisBandsFill","axisTitleStyle","fontSize","fontFamily","fontWeight","color","padding","Thickness","axisBorder","borderTop","borderRight","majorGridLineStyle","strokeThickness","strokeDashArray","majorTickLineStyle","tickSize","minorTickLineStyle","labelStyle","initLineSerie","xid","yid","storke","FastLineRenderableSeries","xAxisId","yAxisId","stroke","initNumericLabelPara","precision","labelFormat","ENumericFormat","labelPrecision","useNativeText","addChartModifiers","chartModifiers","add","MouseWheelZoomModifier","ZoomExtentsModifier","ZoomPanModifier","PinchZoomModifier","theme","SciChartJSDarkv2Theme","loadingAnimationForeground","loadingAnimationBackground","sciChartBackground","RectEO","constructor","xmin","xmax","ymin","ymax","this","active","isOK","strokeOK","strokeNOK","XYChart","xname","yname","eo","stepSvg1","stepSvg2","async","elementId","chart","stepsAnnotation","xAxis","yAxis","sciChartSurface","xAxes","yAxes","labelProvider","NumericLabelProvider","useCache","dataSeries","XyDataSeries","containsNaN","isSorted","lineSerie","renderableSeries","auto_fit","hasEO","addRectEO","xRange","yRange","is_init","setRectEO","Angle","Force","boxHorizontalLine","boxVerticalLine","axisLabelFill","y1","x1","boxAnnotation","annotations","contains","BoxAnnotation","fill","x2","y2","HorizontalLineAnnotation","showLabel","axisFontSize","labelPlacement","ELabelPlacement","VerticalLineAnnotation","addStepsRectEO","steps","stepsSvgAnnotation1","stepsSvgAnnotation2","stepsSvgAnnotation3","stepsPositons","xStepInterval","max","min","yStepInterval","length","j","p","angle","push","i","h","Math","floor","w","anno1","CustomAnnotation","torque","yCoordinateMode","ECoordinateMode","verticalAnchorPoint","EVerticalAnchorPoint","horizontalAnchorPoint","EHorizontalAnchorPoint","svgString","anno2","LineAnnotation","xCoordinateMode","map","step","anno","concat","clearStepsRectEO","forEach","element","remove","resetEO","setEoResult","rok","isOk","addSeriesData","xValues","yValues","appendRange","clearSeriesData","clear","fit","count","getMaximumRange","diff","fitWithEO","fitWithEORange","setEoRange","setXRange","setYRange","showCursor","show","setXPrecision","setYPrecision","destory","delete","CHART_XY","CHART_TSPD","window","addEventListener","console","log","err","XYYChart","y2name","super","createChart","yid2","yAxis2","layoutManager","leftOuterAxesLayoutStrategy","LeftAlignedOuterVerticallyStackedAxisLayoutStrategy","xy2lineSerie","xy2dataSeries","yRange2","arr","box1","box2","box4","box5","box7","clearRectEO","boxTargetInfo","boxTargetPoint","boxTargetLine","boxSlopeInfo","boxSlopePoint","boxSlopeLine","yValues2","setYRange2","setY2Precision","CHART_TPT"],"sourceRoot":""}